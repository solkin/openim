/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tomclaw.openim.main;

/**
 *
 * @author solkin
 */
public class ChatFrame extends javax.swing.JFrame {

  /** Creates new form ChatFrame */
  public ChatFrame() {
    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chatPanels = new javax.swing.JTabbedPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chatPanels, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chatPanels, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  public ChatPanel getChatTab(BuddyItem buddyItem, boolean isSwitchTo) {
    ChatPanel chatPanel = null;
    int chatPanelsCount = chatPanels.getTabCount();
    for ( int c = 0; c < chatPanelsCount; c++ ) {
      ChatPanel t_chatPanel = ( ChatPanel ) chatPanels.getComponentAt( c );
      if ( t_chatPanel.getBuddyItem().equals( buddyItem ) ) {
        /** Chat panel found **/
        chatPanel = t_chatPanel;
        break;
      }
    }
    if ( chatPanel == null ) {
      chatPanel = new ChatPanel( buddyItem );
      chatPanels.add( buddyItem.getNickName(), chatPanel );
      updatePanelsStatus();
      updateChatPanels();
    }
    if ( isSwitchTo ) {
      chatPanels.setSelectedComponent( chatPanel );
    }
    return chatPanel;
  }

  public void updatePanelsStatus() {
    int chatPanelsCount = chatPanels.getTabCount();
    for ( int c = 0; c < chatPanelsCount; c++ ) {
      updatePanelStatus( c );
    }
  }

  public void updatePanelStatus(int panelIndex) {
    ChatPanel chatPanel = ( ChatPanel ) chatPanels.getComponentAt( panelIndex );
    System.out.println("/".concat( chatPanel.getBuddyItem().getAccountRoot().getType() ).concat( "/res/" ).
            concat( chatPanel.getBuddyItem().getAccountRoot().getStatusUtil().getStatusValue( chatPanel.getBuddyItem().getStatusId() ) ).
            concat( ".png" ) );
    chatPanels.setIconAt( panelIndex, IconCache.getImage( "/".concat( chatPanel.getBuddyItem().getAccountRoot().getType() ).concat( "/res/" ).
            concat( chatPanel.getBuddyItem().getAccountRoot().getStatusUtil().getStatusValue( chatPanel.getBuddyItem().getStatusId() ) ).
            concat( ".png" ) ) );
  }

  public void updateChatPanels() {
    javax.swing.SwingUtilities.invokeLater( new Runnable() {

      @Override
      public void run() {
        ChatFrame.this.chatPanels.updateUI();
      }
    } );
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTabbedPane chatPanels;
    // End of variables declaration//GEN-END:variables
}
